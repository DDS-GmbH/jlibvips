plugins {
    id 'java'
    id 'java-library'
    id 'signing'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '4.0.3'
    id 'groovy'
    id "net.java.openjdk.shinyafox.jshell.gradle.plugin" version "1.0.4"
}

group 'io.github.codecitizen'
archivesBaseName = 'jlibvips'
version '1.3.0.RELEASE'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileTestGroovy {
    sourceCompatibility = 1.10
    targetCompatibility = 1.10
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'net.java.dev.jna', name: 'jna', version: '5.1.0'
    implementation 'org.codehaus.groovy:groovy:2.5.4'

    testCompile 'org.spockframework:spock-core:1.2-groovy-2.5'
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                    'Implementation-Version': project.version)
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    exclude 'org/jlibvips/jna/**'
    exclude 'org/jlibvips/util/**'
}

wrapper {
    gradleVersion = '5.0'
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    useGpgCmd()
    sign configurations.archives
}

uploadArchives {
    repositories {
        if (!project.hasProperty('ossrhUsername') || !project.hasProperty('ossrhPassword')) {
            println "skip uploadArchives"
            return ;
        }
        mavenDeployer {

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: findProperty("ossrhUsername"), password: findProperty("ossrhPassword"))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: findProperty("ossrhUsername"), password: findProperty("ossrhPassword"))
            }

            pom.project {
                name = 'jlibvips'
                packaging = 'jar'
                // optionally artifactId can be defined here
                description = 'A Java interface to llibvips, the fast image processing library with low memory needs.'
                url = 'https://github.com/DDS-GmbH/jlibvips'

                scm {
                    connection = 'https://github.com/DDS-GmbH/jlibvips'
                    developerConnection = 'https://github.com/DDS-GmbH/jlibvips'
                    url = 'https://github.com/DDS-GmbH/jlibvips'
                }

                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'codecitizen'
                        name = 'Ing. Alexander Partsch'
                        email = 'alexander@partsch.ninja'
                    }
                }
            }
        }
    }
}